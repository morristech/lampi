#!/bin/bash
p_name=lampi
p_author='Md Jahidul Hamid'
p_source='https://github.com/neurobin/lampi'
p_bugt="$p_source/issues"
p_version=0.1.3
ver_info="
Name        : $p_name
Version     : $p_version
Author      : $p_author
Source      : $p_source
Bug tracker : $p_bugt
"
help="
######################### lampi ##############################
############# LAMP stack installer for Ubuntu ################
##############################################################
# Usage:
#   lampi [-i, -ri, -u, -rm, -f -nu, -s, -so, -n, -dr, -v, -h]
#
# Run simply lampi -i to install the LAMP stack
# with default configs
#
# Options:
#   [ -i, --install ]       : install LAMP
#   [ -ri, --reinstall ]    : reinstall LAMP
#   [ -u, --uninstall ]     : uninstall LAMP
#   [ -rm, --remove ]       : remove a site
#   [ -f, --force ]         : force (remove directory)
#   [ -nu, --no-update ]    : do not run apt-get update
#   [ -s, --ssl ]           : enable SSL   
#   [ -so, --ssl-only ]     : configure for https site only 
#   [ -n, --name ]          : server name (default localhost)
#   [ -dr, --doc-root ]     : arbitrary document root
#   [ -npa, --no-php-myadmin: no php my admin
#   [ -v, --version ]       : show version info
#   [ -h, --help ]          : show help 
##############################################################
"
dr=''
ssl=false
ssl_only=false
no_update=false
install=false
localhost=localhost
uninstall=false
reinstall=false
remove=
force=false
npa=false
for op in "$@";do
    case "$op" in
        -v|--version)
            echo "$ver_info"
            shift
            exit 0
            ;;
        -h|--help)
            echo "$help"
            shift
            exit 0
            ;;
        -dr|--doc-root)
            shift
            if [[ "$1" != "" ]]; then
                dr="${1/%\//}"
                shift
            else
                echo "E: Arg missing for -dr option"
                exit 1
            fi
            ;;
        -s|--ssl)
            ssl=true
            shift
            ;;
        -so|--ssl-only)
            ssl=true
            ssl_only=true
            shift
            ;;
        -nu|--no-update)
            no_update=true
            shift
            ;;
        -npa|--no-php-myadmin)
            npa=true
            shift
            ;;
        -i|--install)
            install=true
            reinstall=false
            uninstall=false
            shift
            ;;
        -ri|--reinstall)
            install=true
            reinstall=true
            uninstall=false
            shift
            ;;
        -u|--uninstall)
            install=false
            reinstall=false
            uninstall=true
            shift
            ;;
        -f|--force)
            force=true
            shift
            ;;
        -rm|--remove)
            shift
            if [[ "$1" != "" ]]; then
                remove="$1"
                shift
            else
                echo "E: Arg missing for -rm option"
                exit 1
            fi
            ;;
        -n|--name)
            shift
            if [[ "$1" != "" ]]; then
                localhost="$1"
                shift
            else
                echo "E: Arg missing for -n option"
                exit 1
            fi
            ;;
        -*)
            echo "E: Invalid option: $1"
            shift
            exit 1
            ;;
    esac
done

[ "$dr" = "" ] && dr='/var/www/html'

opts="
***** Passed options *****
DocumentRoot    : $dr
ServerName      : $localhost
SSL             : $ssl
SSL only        : $ssl_only
Install         : $install
Uninstall       : $uninstall
Reinstall       : $reinstall
NoUpdate        : $no_update
"
#echo "$opts"


#check for root
if [ $EUID -ne 0 ]; then
    printf "\n\tRoot privilege required\n"
    printf "\tSorry! Exiting\n\n"
    exit 1
fi
user=www-data
if [ ! -z "$SUDO_USER" ]; then
    user="$SUDO_USER"
fi
mkdir -p "$dr"

#extract dist version
rel=(`lsb_release -r | grep -o '[0-9]\+'`)
rv=${rel[0]}

tphp='
<?php
phpinfo();
?>
'
endm="
****** Successfully reloaded apache2 ******
"

aconf=/etc/apache2/apache2.conf

if [ -n "$remove" ]; then
    a2dissite $remove
    remove_file=/etc/apache2/sites-available/"$remove.conf"
    rm_dir="$(sed -n -e 's/^[[:blank:]]*DocumentRoot[[:blank:]]*\([^#]*\).*/\1/p' "$remove_file")"
    if $force; then
        rm -r "$rm_dir"
    fi
    rm "$remove_file"
else
    if $install || $uninstall; then

        #update
        if ! $no_update && ! $uninstall;then apt-get update;fi

        #apache2
        list=(
        'apache2'
        )
        
        #php
        php='mcrypt'
        if (( $rv <= 15 ));then
            php="$php php5 libapache2-mod-php5 php5-mcrypt php5-cgi php5-cli php5-common php5-curl php5-gd"
        elif (( $rv >= 16 ));then
            php="$php php libapache2-mod-php php-mcrypt php-cgi php-cli php-common php-curl php-gd"
        fi
        
        list+=("$php")

        # mysql
        mysql='mysql-server mysql-client'
        if (( $rv <= 15 ));then
            mysql="$mysql php5-mysql"
        elif (( $rv >= 16 ));then
            mysql="$mysql php-mysql"
        fi
        list+=("$mysql")

        #phpmyadmin
        phpmd='phpmyadmin apache2-utils'
        if (( $rv >= 16 ));then
            phpmd="$phpmd php-gettext php-mbstring"
        fi
        list+=("$phpmd")

        for app in "${list[@]}";do
            if ! $uninstall; then
                echo "###### Installing: $app #######"
                { if ! $reinstall; then apt-get -y install $app;else apt-get --force-yes -y install --reinstall $app;fi; } || 
                {
                echo "W: Failed to install: $app"
                [ "$app" = apache2 ] && exit 1
                }
             else
                echo "###### Removing: $app #######"
                apt-get  -y purge $app
             fi
             
        done
        if ! $npa; then
            pdconf=/etc/phpmyadmin/apache.conf
            pdincl="Include $pdconf"
            if ! grep -s -e "$pdincl" "$aconf" >/dev/null 2>&1; then
                sed -i.bak "$ a $pdincl" "$aconf" &&
                printf "\n\t apache2 conf modified to include phpmyadmin\n" ||
                printf "\n\tE: failed to modify apache2 conf for phpmyadmin\n"
            else
                printf "\n\tphpmyadmin is already added in apache2 conf (skipped)\n"
            fi
        fi
        apt-get autoremove
        
        if ! $uninstall; then
            if (( $rv <= 15 )); then
                php5enmod mcrypt
            elif (( $rv >= 16 )); then
                phpenmod mcrypt
                phpenmod mbstring
            fi
        
        fi
            
    fi
 
    #if uninstall exit
    if $uninstall;then echo "Removed LAMP installation (custom sites are not removed)."; exit 0;fi

    #create info.php
    [ ! -f "$dr"/info.php ] && echo "$tphp" > "$dr"/info.php && printf "\n\tinfo.php created\n" || printf "\n\tinfo.php exists (skipped)\n"
    
    chown -R $user:$user "$dr"

    if $npa; then
        sed -i.bak -e 's#^[[:blank:]]*Include[[:blank:]]*/etc/phpmyadmin/apache.conf[[:blank:]]*.*##' "$aconf"
    fi

get_exec_path(){
    p="$(type "$1" | sed -n -e "s#.*[[:blank:]]\([^[:blank:]]*$1\)[[:blank:]]*\$#\1#p")"
    if [ -n "$p" ]; then
        echo "$p"
    else
        echo "$1"
    fi
}
    
    #custom sites
    bdir='/etc/apache2/sites-available'
    dsn="$bdir/$localhost.conf"
    dsln="$bdir/$localhost-ssl.conf"

    CGIROOT="$(dirname "$(get_exec_path php-cgi)")"
    
    http="<VirtualHost *:80>
            ServerAlias $localhost
            ServerAdmin admin@$localhost
            
            DocumentRoot $dr
            <Directory />
                    Options FollowSymLinks
                    AllowOverride All
            </Directory>
            <Directory $dr >
                    Options Indexes FollowSymLinks MultiViews
                    AllowOverride All
                    Order allow,deny
                    allow from all
            </Directory>
		    # Configure PHP as CGI
		    ScriptAlias /local-bin $CGIROOT
		    DirectoryIndex index.php index.html
		    AddType application/x-httpd-php5 .php
		    Action application/x-httpd-php5 /local-bin/php-cgi
    </VirtualHost>"
    
    https="<VirtualHost *:443>
            ServerAlias $localhost
            ServerAdmin admin@$localhost
            
            DocumentRoot $dr
            <Directory />
                    Options FollowSymLinks
                    AllowOverride All
            </Directory>
            <Directory $dr >
                    Options Indexes FollowSymLinks MultiViews
                    AllowOverride All
                    Order allow,deny
                    allow from all
            </Directory>
		    # Configure PHP as CGI
		    ScriptAlias /local-bin $CGIROOT
		    DirectoryIndex index.php index.html
		    AddType application/x-httpd-php5 .php
		    Action application/x-httpd-php5 '/local-bin/php-cgi'
		    
		    # Configure SSL
		    SSLEngine on
		    SSLCertificateFile	/etc/ssl/certs/ssl-cert-snakeoil.pem
		    SSLCertificateKeyFile /etc/ssl/private/ssl-cert-snakeoil.key
    </VirtualHost>"

    if [ "$dsn" = "$dsln" ]; then
        printf "$dsn\m\t\tand\n$dsln\n\t\tcan not be same\nE: ServerName: $(basename "$dsn") not allowed\n"
        exit 1
    fi


    #manage /etc/hosts
    if ! grep -s -e "^127.0.0.1[[:blank:]]*$localhost[[:blank:]]*$" /etc/hosts >/dev/null 2>&1; then
        sed -i.bak -e "1 a 127.0.0.1\t$localhost" /etc/hosts &&
        printf "\n\tAdded $localhost to /etc/hosts\n" ||
        printf "\n\tE: Failed to add $localhost to /etc/hosts\n"
    fi

    #enable mods
    a2enmod actions &&
    printf "\n\tEnabled mod_actions" ||
    printf "\n\tD: Failed to enable mod_actions"
    
    a2enmod rewrite &&
    printf "\n\tEnabled mod_rewrite\n" || 
    printf "\n\tE: Failed to enable mod_rewrite\n"
    if $ssl; then 
        a2enmod ssl &&
        printf "\n\tEnabled mod_ssl\n" ||
        printf "\n\tE: Failed to enable mod_ssl\n"
    fi

    #enable sites
    
    endm="$endm
    ******* Visit Site *******
        "
    if ! $ssl_only; then
        endm="${endm}http://$localhost/info.php
        "
        echo "$http" > "$dsn"
        a2ensite "$localhost" &&
        printf "\n\tEnabled $localhost\n" ||
        printf "\n\tE: Failed to enable $localhost\n"
    fi
    if $ssl; then 
        endm="${endm}https://$localhost/info.php
        "
        echo "$https" > "$dsln"
        a2ensite "$localhost"-ssl &&
        printf "\n\tEnabled $localhost-ssl\n" ||
        printf "\n\tE: Failed to enable $localhost-ssl\n"
    fi
fi

#restart the apache2 service
{
service apache2 restart ||
systemctl restart apache2
} &&
echo "$endm" ||
echo "\n\tE: Failed to restart apache2\n"

