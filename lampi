#!/bin/bash
p_name=lampi
p_author='Md Jahidul Hamid'
p_source='https://github.com/neurobin/lampi'
p_bugt="$p_source/issues"
p_version=0.0.2
ver_info="
Name        : $p_name
Version     : $p_version
Author      : $p_author
Source      : $p_source
Bug tracker : $p_bugt
"
help="
######################### lampi #############################
############# Lamp stack installer for Ubuntu ###############
#############################################################
# Usage:
#   lampi [-v, -h, -dr, -s]
#
# Run simply lampi -i to install the lamp stack
# with default configs
#
# Options:
#   [ -i, --install ]       : install lamp
#   [ -nu, --no-update ]    : do not run apt-get update
#   [ -s, --ssl ]           : enable SSL    
#   [ -n, --name ]          : server name (default localhost)
#   [ -dr, --doc-root ]     : arbitrary document root  
#   [ -v, --version ]       : show version info
#   [ -h, --help ]          : show help 
##############################################################
"
dr=''
ssl=false
no_update=false
install=false
localhost=localhost
for op in "$@";do
    case "$op" in
        -v|--version)
            echo "$ver_info"
            shift
            exit 0
            ;;
        -h|--help)
            echo "$help"
            shift
            exit 0
            ;;
        -dr|--doc-root)
            shift
            if [[ "$1" != "" ]]; then
                dr="${1/%\//}"
                shift
            else
                echo "E: Arg missing for -dr option"
                exit 1
            fi
            ;;
        -s|--ssl)
            ssl=true
            shift
            ;;
        -nu|--no-update)
            no_update=true
            shift
            ;;
        -i|--install)
            install=true
            shift
            ;;
        -n|--name)
            shift
            if [[ "$1" != "" ]]; then
                localhost="$1"
                shift
            else
                echo "E: Arg missing for -n option"
                exit 1
            fi
            ;;
        -*)
            echo "E: Invalid option: $1"
            shift
            exit 1
            ;;
    esac
done

[ "$dr" = "" ] && dr='/var/www/html'

opts="
***** Passed options *****
DocumentRoot    : $dr
ServerName      : $localhost
SSL             : $ssl
Install         : $install
NoUpdate        : $no_update
"
echo "$opts"


#check for root
if [ $EUID -ne 0 ]; then
    printf "\n\tRoot privilege required\n"
    printf "\tSorry! Exiting\n\n"
    exit 1
fi

mkdir -p "$dr"

#extract dist version
rel=(`lsb_release -r | grep -o '[0-9]\+'`)
rv=${rel[0]}

tphp='
<?php
phpinfo();
?>
'

if $install; then

    #update
    if ! $no_update;then apt-get update;fi

    #apache2 and mysql
    list=(
    'apache2'
    'mysql-server'
    'mysql-client'
    )

    #mysql
    if [ "$rv" = '14' ];then
        mysql="php5-mysql"
    elif [ "$rv" = '16' ];then
        mysql="php-mysql"
    fi
    for i in $mysql;do
        list+=("$i")
    done

    #php
    if [ "$rv" = '14' ];then
        php='php5 libapache2-mod-php5 php5-mcrypt php5-cgi php5-cli php5-common php5-curl php5-gd'
    elif [ "$rv" = '16' ];then
        php='php libapache2-mod-php php-mcrypt php-cgi php-cli php-common php-curl php-gd'
    fi
    for i in $php;do
        list+=("$i")
    done

    #phpmyadmin
    phpmd='phpmyadmin apache2-utils'
    if [ "$rv" = '16' ];then
        phpmd="$phpmd php-gettext php-mbstring"
    fi
    for i in $phpmd;do
        list+=("$i")
    done

    for app in ${list[@]};do
        echo "###### Installing: $app #######"
        apt-get -y install $app || 
        apt-get -y install --reinstall $app || {
        echo "W: Failed to install: $app"
        [ "$app" = apache2 ] && exit 1
        [ "$app" = php ] && exit 1
        [ "$app" = php5 ] && exit 1
        }
    done
fi

#create info.php
[ ! -f "$dr"/info.php ] && echo "$tphp" > "$dr"/info.php && printf "\tinfo.php created\n" || printf "\tinfo.php exists (skipped)\n"

aconf=/etc/apache2/apache2.conf
pdconf=/etc/phpmyadmin/apache.conf
pdincl="Include $pdconf"
if ! grep -s -e "$pdincl" "$aconf" >/dev/null 2>&1; then
    sed -i.bak "$ a $pdincl" "$aconf" &&
    printf "\t apache2 conf modified to include phpmyadmin\n" ||
    printf "\tE: failed to modify apache2 conf for phpmyadmin\n"
else
    printf "\tphpmyadmin is already added in apache2 conf (skipped)\n"
fi

dire="\t<Directory $dr>\n\t\tAllowOverride All\n\t\tOptions Indexes FollowSymLinks MultiViews\n\t\tOrder allow,deny\n\t\tRequire all granted\n\t\tAllow from all\n\t\t\n\t</Directory>\n"

#custom sites
ds='/etc/apache2/sites-available/000-default.conf'
ds_ssl='/etc/apache2/sites-available/default-ssl.conf'
dsn="$(dirname "$ds")/$localhost.conf"
ds_ssln="$(dirname "$ds_ssl")/$localhost-ssl.conf"

export localhost
export dr
export dire
copy_default_config(){
    sed  -e "s=^\([[:blank:]]*DocumentRoot\).*$=\1 $dr="\
               -e "s=^\([[:blank:]]*ServerName\).*$=\1 $localhost="\
               -e "s=^\([[:blank:]]*<[[:blank:]]*Directory[[:blank:]]*\)[^[:blank:]]\+\([[:blank:]]*>[[:blank:]]*\)$=\1$dr\2="\
               -e "s=^\([[:blank:]]*<[[:blank:]]*VirtualHost[[:blank:]]*\)[^:]*\(:[^>]*>[[:blank:]]*\)$=\1 127.0.0.1\2="\
               "$1" > "$2" &&
    printf "\tcopied $1 --> $2 with requred modifications\n" ||
    printf "\tE: Failed to copy $1 --> $2\n"
}

copy_default_config "$ds" "$dsn"
copy_default_config "$ds_ssl" "$ds_ssln"

insert_server_property(){
    if ! grep -s -e "^\([[:blank:]]*$1\).*$" "$2" >/dev/null 2>&1; then
        sed -i.bak -e "s=^[[:blank:]]*<[[:blank:]]*VirtualHost[[:blank:]]*.*>[[:blank:]]*$=&\n\tServerName $localhost=" "$2" &&
        printf "\tSuccessfully inserted $1 to $2\n" ||
        printf "\tE: Failed to insert $1 to $2\n"
    else
        printf "\t$1 exists in $2 (skipped)\n"
    fi
}
insert_server_property ServerName "$dsn"
insert_server_property ServerName "$ds_ssln"

insert_docroot_property(){
    if ! grep -s -e "^[[:blank:]]*<[[:blank:]]*Directory[[:blank:]]*[^[:blank:]]\+[[:blank:]]*>[[:blank:]]*$" "$1" >/dev/null 2>&1; then
        sed -i.bak -e "s=^\([[:blank:]]*\)DocumentRoot.*$=&\n$dire=" "$1" &&
        printf "\tSuccessfully inserted DocumentRoot in $1\n" ||
        printf "\tE: Failed to insert DocumentRoot in $1\n"
    else
        printf "\tDocumentRoot exists in $1 (skipped)\n"
    fi
}

insert_docroot_property "$dsn"
insert_docroot_property "$ds_ssln"

if ! grep -s -e "^127.0.0.1[[:blank:]]*$localhost[[:blank:]]*$" /etc/hosts >/dev/null 2>&1; then
    sed -i.bak -e "1 a 127.0.0.1\t$localhost" /etc/hosts &&
    printf "Added $localhost to /etc/hosts" ||
    printf "E: Failed to add $localhost to /etc/hosts"
fi

#enable mods
a2enmod rewrite &&
printf "\tEnabled mod_rewrite\n" || 
printf "\tE: Failed to enable mod_rewrite\n"
if $ssl; then 
    a2enmod ssl &&
    printf "\tEnabled mod_ssl\n" ||
    printf "\tE: Failed to enable mod_ssl\n"
fi

#enable sites
a2ensite "$localhost" &&
printf "\tEnabled $localhost\n" ||
printf "\tE: Failed to enable $localhost\n"
if $ssl; then 
    a2ensite "$localhost"-ssl &&
    printf "\tEnabled $localhost-ssl\n" ||
    printf "\tE: Failed to enable $localhost-ssl\n"
fi

endm="
****** Successfully reloaded apache2 ******
******* Visit Site *******
    http://$localhost/info.php
    "
if $ssl; then 
    endm="${endm}https://$localhost/info.php
    "
fi

#restart the apache2 service
service apache2 restart &&
echo "$endm" ||
echo "E: Failed to restart apache2"
